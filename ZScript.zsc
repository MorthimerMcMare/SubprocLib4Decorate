version "2.4.0"

#include "ZScript/Util.zsc"
#include "ZScript/Subproc.zsc"
#include "ZScript/Parallel.zsc"

#include "Examples/ZScriptBase.zsc"

// Old engine version compatible branch.

class SubprocActor: Actor abstract {
	/* Subroutines */
	action State SUBP_Call( StateLabel label ) {
		return SubproclibStatesStackKeeper.GetKeeper( invoker ).SubprocCall( label );
	}

	action State SUBP_Return( void ) {
		return SubproclibStatesStackKeeper.GetKeeper( invoker ).SubprocReturn();
	}

	void SUBP_RemoveHandler( void ) {
		SubproclibStatesStackKeeper.RemoveKeeper( self );
	}

	void SUBP_InitHandler( void ) {
		SubproclibStatesStackKeeper.GetKeeper( self );
	}


	/* Parallelization */
	action void PAR_Thread( StateLabel label, int steps = PARSTEPS_Infinite, EParallelExecDirectives execparams = PARSPR_SkipTNT1 ) {
		SubproclibParallelExecKeeper.GetKeeper( invoker ).AddThread( label, steps, execparams );
	}

	action void PAR_Stop( StateLabel label = NULL ) {
		SubproclibParallelExecKeeper.GetKeeper( invoker ).RemoveThread( label );
	}

	action void PAR_FrozeFlow( StateLabel label, bool freezethread ) {
		SubproclibParallelExecKeeper.GetKeeper( invoker ).ThreadFrozeControl( label, freezethread );
	}
} // of class SubprocActor: Actor abstract {}
