// Base parallel classes for:
//	"/Examples/ParallelDoomImp.zsc";
//	"/Examples/SubprocBaron.zsc".

class DoomImpParallelBase: DoomImp {
	action void PAR_Thread( StateLabel label, int steps = PARSTEPS_Infinite, EParallelExecDirectives execparams = PARSPR_SkipTNT1 ) {
		SubproclibParallelExecKeeper.GetKeeper( invoker ).AddThread( label, steps, execparams );
	}

	action void PAR_Stop( StateLabel label = NULL ) {
		SubproclibParallelExecKeeper.GetKeeper( invoker ).RemoveThread( label );
	}

	action void PAR_FrozeFlow( StateLabel label, bool freezethread ) {
		SubproclibParallelExecKeeper.GetKeeper( invoker ).ThreadFrozeControl( label, freezethread );
	}
}

class BaronSubprocBase: BaronOfHell {
	action State SUBP_Call( StateLabel label ) {
		return SubproclibStatesStackKeeper.GetKeeper( invoker ).SubprocCall( label );
	}

	action State SUBP_Return( void ) {
		return SubproclibStatesStackKeeper.GetKeeper( invoker ).SubprocReturn();
	}
}

